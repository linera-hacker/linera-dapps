// Code generated by ent, DO NOT EDIT.

package runtime

import (
	"context"

	"github.com/Geapefurit/kline-back/zeus/pkg/db/ent/kpoint"
	"github.com/Geapefurit/kline-back/zeus/pkg/db/ent/kprice"
	"github.com/Geapefurit/kline-back/zeus/pkg/db/ent/schema"
	"github.com/Geapefurit/kline-back/zeus/pkg/db/ent/token"
	"github.com/Geapefurit/kline-back/zeus/pkg/db/ent/tokenpair"
	"github.com/Geapefurit/kline-back/zeus/pkg/db/ent/transaction"

	"entgo.io/ent"
	"entgo.io/ent/privacy"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	kpointMixin := schema.KPoint{}.Mixin()
	kpoint.Policy = privacy.NewPolicies(kpointMixin[0], schema.KPoint{})
	kpoint.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := kpoint.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	kpointMixinFields0 := kpointMixin[0].Fields()
	_ = kpointMixinFields0
	kpointFields := schema.KPoint{}.Fields()
	_ = kpointFields
	// kpointDescCreatedAt is the schema descriptor for created_at field.
	kpointDescCreatedAt := kpointMixinFields0[0].Descriptor()
	// kpoint.DefaultCreatedAt holds the default value on creation for the created_at field.
	kpoint.DefaultCreatedAt = kpointDescCreatedAt.Default.(func() uint32)
	// kpointDescUpdatedAt is the schema descriptor for updated_at field.
	kpointDescUpdatedAt := kpointMixinFields0[1].Descriptor()
	// kpoint.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	kpoint.DefaultUpdatedAt = kpointDescUpdatedAt.Default.(func() uint32)
	// kpoint.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	kpoint.UpdateDefaultUpdatedAt = kpointDescUpdatedAt.UpdateDefault.(func() uint32)
	// kpointDescDeletedAt is the schema descriptor for deleted_at field.
	kpointDescDeletedAt := kpointMixinFields0[2].Descriptor()
	// kpoint.DefaultDeletedAt holds the default value on creation for the deleted_at field.
	kpoint.DefaultDeletedAt = kpointDescDeletedAt.Default.(func() uint32)
	// kpointDescKPointType is the schema descriptor for k_point_type field.
	kpointDescKPointType := kpointFields[2].Descriptor()
	// kpoint.DefaultKPointType holds the default value on creation for the k_point_type field.
	kpoint.DefaultKPointType = kpointDescKPointType.Default.(string)
	kpriceMixin := schema.KPrice{}.Mixin()
	kprice.Policy = privacy.NewPolicies(kpriceMixin[0], schema.KPrice{})
	kprice.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := kprice.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	kpriceMixinFields0 := kpriceMixin[0].Fields()
	_ = kpriceMixinFields0
	kpriceFields := schema.KPrice{}.Fields()
	_ = kpriceFields
	// kpriceDescCreatedAt is the schema descriptor for created_at field.
	kpriceDescCreatedAt := kpriceMixinFields0[0].Descriptor()
	// kprice.DefaultCreatedAt holds the default value on creation for the created_at field.
	kprice.DefaultCreatedAt = kpriceDescCreatedAt.Default.(func() uint32)
	// kpriceDescUpdatedAt is the schema descriptor for updated_at field.
	kpriceDescUpdatedAt := kpriceMixinFields0[1].Descriptor()
	// kprice.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	kprice.DefaultUpdatedAt = kpriceDescUpdatedAt.Default.(func() uint32)
	// kprice.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	kprice.UpdateDefaultUpdatedAt = kpriceDescUpdatedAt.UpdateDefault.(func() uint32)
	// kpriceDescDeletedAt is the schema descriptor for deleted_at field.
	kpriceDescDeletedAt := kpriceMixinFields0[2].Descriptor()
	// kprice.DefaultDeletedAt holds the default value on creation for the deleted_at field.
	kprice.DefaultDeletedAt = kpriceDescDeletedAt.Default.(func() uint32)
	tokenMixin := schema.Token{}.Mixin()
	token.Policy = privacy.NewPolicies(tokenMixin[0], schema.Token{})
	token.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := token.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	tokenMixinFields0 := tokenMixin[0].Fields()
	_ = tokenMixinFields0
	tokenFields := schema.Token{}.Fields()
	_ = tokenFields
	// tokenDescCreatedAt is the schema descriptor for created_at field.
	tokenDescCreatedAt := tokenMixinFields0[0].Descriptor()
	// token.DefaultCreatedAt holds the default value on creation for the created_at field.
	token.DefaultCreatedAt = tokenDescCreatedAt.Default.(func() uint32)
	// tokenDescUpdatedAt is the schema descriptor for updated_at field.
	tokenDescUpdatedAt := tokenMixinFields0[1].Descriptor()
	// token.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	token.DefaultUpdatedAt = tokenDescUpdatedAt.Default.(func() uint32)
	// token.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	token.UpdateDefaultUpdatedAt = tokenDescUpdatedAt.UpdateDefault.(func() uint32)
	// tokenDescDeletedAt is the schema descriptor for deleted_at field.
	tokenDescDeletedAt := tokenMixinFields0[2].Descriptor()
	// token.DefaultDeletedAt holds the default value on creation for the deleted_at field.
	token.DefaultDeletedAt = tokenDescDeletedAt.Default.(func() uint32)
	tokenpairMixin := schema.TokenPair{}.Mixin()
	tokenpair.Policy = privacy.NewPolicies(tokenpairMixin[0], schema.TokenPair{})
	tokenpair.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := tokenpair.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	tokenpairMixinFields0 := tokenpairMixin[0].Fields()
	_ = tokenpairMixinFields0
	tokenpairFields := schema.TokenPair{}.Fields()
	_ = tokenpairFields
	// tokenpairDescCreatedAt is the schema descriptor for created_at field.
	tokenpairDescCreatedAt := tokenpairMixinFields0[0].Descriptor()
	// tokenpair.DefaultCreatedAt holds the default value on creation for the created_at field.
	tokenpair.DefaultCreatedAt = tokenpairDescCreatedAt.Default.(func() uint32)
	// tokenpairDescUpdatedAt is the schema descriptor for updated_at field.
	tokenpairDescUpdatedAt := tokenpairMixinFields0[1].Descriptor()
	// tokenpair.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	tokenpair.DefaultUpdatedAt = tokenpairDescUpdatedAt.Default.(func() uint32)
	// tokenpair.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	tokenpair.UpdateDefaultUpdatedAt = tokenpairDescUpdatedAt.UpdateDefault.(func() uint32)
	// tokenpairDescDeletedAt is the schema descriptor for deleted_at field.
	tokenpairDescDeletedAt := tokenpairMixinFields0[2].Descriptor()
	// tokenpair.DefaultDeletedAt holds the default value on creation for the deleted_at field.
	tokenpair.DefaultDeletedAt = tokenpairDescDeletedAt.Default.(func() uint32)
	transactionMixin := schema.Transaction{}.Mixin()
	transaction.Policy = privacy.NewPolicies(transactionMixin[0], schema.Transaction{})
	transaction.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := transaction.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	transactionMixinFields0 := transactionMixin[0].Fields()
	_ = transactionMixinFields0
	transactionFields := schema.Transaction{}.Fields()
	_ = transactionFields
	// transactionDescCreatedAt is the schema descriptor for created_at field.
	transactionDescCreatedAt := transactionMixinFields0[0].Descriptor()
	// transaction.DefaultCreatedAt holds the default value on creation for the created_at field.
	transaction.DefaultCreatedAt = transactionDescCreatedAt.Default.(func() uint32)
	// transactionDescUpdatedAt is the schema descriptor for updated_at field.
	transactionDescUpdatedAt := transactionMixinFields0[1].Descriptor()
	// transaction.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	transaction.DefaultUpdatedAt = transactionDescUpdatedAt.Default.(func() uint32)
	// transaction.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	transaction.UpdateDefaultUpdatedAt = transactionDescUpdatedAt.UpdateDefault.(func() uint32)
	// transactionDescDeletedAt is the schema descriptor for deleted_at field.
	transactionDescDeletedAt := transactionMixinFields0[2].Descriptor()
	// transaction.DefaultDeletedAt holds the default value on creation for the deleted_at field.
	transaction.DefaultDeletedAt = transactionDescDeletedAt.Default.(func() uint32)
}

const (
	Version = "v0.11.2" // Version of ent codegen.
)
