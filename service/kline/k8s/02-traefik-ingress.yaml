apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: kline-service-traefik-app-ingress
  namespace: kube-system
  annotations:
    k8s.kuboard.cn/displayName: kline-service-traefik-app
    k8s.kuboard.cn/workload: kline-service-traefik-app
    kubernetes.io/ingress.class: "traefik-internet"
    traefik.ingress.kubernetes.io/router.entrypoints: web,websecure
    traefik.ingress.kubernetes.io/router.middlewares:
      kube-system-strip-kline-service-prefix@kubernetescrd,
      kube-system-http-redirect-https@kubernetescrd,
      kube-system-common-headers@kubernetescrd

spec:
  rules:
    - host: hk.testnet-archimedes.lineraswap.fun
      http: &hk_http_rules
        paths:
          - path: /api/kline/v1
            backend:
              serviceName: kline-service
              servicePort: 50870
    - host: hk.testnet-archimedes.linerameme.fun
      http: *hk_http_rules
    - host: hk.testnet-archimedes.blobgateway.com
      http: *hk_http_rules

---
kind: Service
apiVersion: v1
metadata:
  name: hk-kline-service
  namespace: kube-system
spec:
  type: ExternalName
  ports:
    - name: https
      port: 443
      targetPort: 443
  externalName: hk.testnet-archimedes.lineraswap.fun

---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: kline-service-traefik-app-ingress-route
  namespace: kube-system

spec:
  entryPoints:
    - web
    - websecure
  routes:
    - match: Host(`testnet-archimedes.linerameme.fun`) && PathPrefix(`/api/kline/v1`)
      kind: Rule
      services:
        - name: hk-kline-service
          port: 443
          passHostHeader: false
    - match: Host(`testnet-archimedes.lineraswap.fun`) && PathPrefix(`/api/kline/v1`)
      kind: Rule
      services:
        - name: hk-kline-service
          port: 443
          passHostHeader: false
    - match: Host(`testnet-archimedes.blobgateway.fun`) && PathPrefix(`/api/kline/v1`)
      kind: Rule
      services:
        - name: hk-kline-service
          port: 443
          passHostHeader: false
