// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v3.18.1
// source: kline/zeus/v1/transaction/transaction.proto

package transaction

import (
	kline "github.com/Geapefurit/kline-back/proto/kline"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TransactionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID              *uint32  `protobuf:"varint,10,opt,name=ID,proto3,oneof" json:"ID,omitempty"`
	PoolID          *uint64  `protobuf:"varint,20,opt,name=PoolID,proto3,oneof" json:"PoolID,omitempty"`
	TransactionID   *uint64  `protobuf:"varint,30,opt,name=TransactionID,proto3,oneof" json:"TransactionID,omitempty"`
	TransactionType *string  `protobuf:"bytes,40,opt,name=TransactionType,proto3,oneof" json:"TransactionType,omitempty"`
	ChainID         *string  `protobuf:"bytes,50,opt,name=ChainID,proto3,oneof" json:"ChainID,omitempty"`
	Owner           *string  `protobuf:"bytes,51,opt,name=Owner,proto3,oneof" json:"Owner,omitempty"`
	AmountZeroIn    *float64 `protobuf:"fixed64,60,opt,name=AmountZeroIn,proto3,oneof" json:"AmountZeroIn,omitempty"`
	AmountOneIn     *float64 `protobuf:"fixed64,70,opt,name=AmountOneIn,proto3,oneof" json:"AmountOneIn,omitempty"`
	AmountZeroOut   *float64 `protobuf:"fixed64,80,opt,name=AmountZeroOut,proto3,oneof" json:"AmountZeroOut,omitempty"`
	AmountOneOut    *float64 `protobuf:"fixed64,90,opt,name=AmountOneOut,proto3,oneof" json:"AmountOneOut,omitempty"`
	Timestamp       *uint32  `protobuf:"varint,100,opt,name=Timestamp,proto3,oneof" json:"Timestamp,omitempty"`
}

func (x *TransactionReq) Reset() {
	*x = TransactionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kline_zeus_v1_transaction_transaction_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionReq) ProtoMessage() {}

func (x *TransactionReq) ProtoReflect() protoreflect.Message {
	mi := &file_kline_zeus_v1_transaction_transaction_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionReq.ProtoReflect.Descriptor instead.
func (*TransactionReq) Descriptor() ([]byte, []int) {
	return file_kline_zeus_v1_transaction_transaction_proto_rawDescGZIP(), []int{0}
}

func (x *TransactionReq) GetID() uint32 {
	if x != nil && x.ID != nil {
		return *x.ID
	}
	return 0
}

func (x *TransactionReq) GetPoolID() uint64 {
	if x != nil && x.PoolID != nil {
		return *x.PoolID
	}
	return 0
}

func (x *TransactionReq) GetTransactionID() uint64 {
	if x != nil && x.TransactionID != nil {
		return *x.TransactionID
	}
	return 0
}

func (x *TransactionReq) GetTransactionType() string {
	if x != nil && x.TransactionType != nil {
		return *x.TransactionType
	}
	return ""
}

func (x *TransactionReq) GetChainID() string {
	if x != nil && x.ChainID != nil {
		return *x.ChainID
	}
	return ""
}

func (x *TransactionReq) GetOwner() string {
	if x != nil && x.Owner != nil {
		return *x.Owner
	}
	return ""
}

func (x *TransactionReq) GetAmountZeroIn() float64 {
	if x != nil && x.AmountZeroIn != nil {
		return *x.AmountZeroIn
	}
	return 0
}

func (x *TransactionReq) GetAmountOneIn() float64 {
	if x != nil && x.AmountOneIn != nil {
		return *x.AmountOneIn
	}
	return 0
}

func (x *TransactionReq) GetAmountZeroOut() float64 {
	if x != nil && x.AmountZeroOut != nil {
		return *x.AmountZeroOut
	}
	return 0
}

func (x *TransactionReq) GetAmountOneOut() float64 {
	if x != nil && x.AmountOneOut != nil {
		return *x.AmountOneOut
	}
	return 0
}

func (x *TransactionReq) GetTimestamp() uint32 {
	if x != nil && x.Timestamp != nil {
		return *x.Timestamp
	}
	return 0
}

type Transaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: sql:"id"
	ID uint32 `protobuf:"varint,10,opt,name=ID,proto3" json:"ID,omitempty" sql:"id"`
	// @inject_tag: sql:"pool_id"
	PoolID uint64 `protobuf:"varint,20,opt,name=PoolID,proto3" json:"PoolID,omitempty" sql:"pool_id"`
	// @inject_tag: sql:"transaction_id"
	TransactionID uint64 `protobuf:"varint,30,opt,name=TransactionID,proto3" json:"TransactionID,omitempty" sql:"transaction_id"`
	// @inject_tag: sql:"transaction_type"
	TransactionType string `protobuf:"bytes,40,opt,name=TransactionType,proto3" json:"TransactionType,omitempty" sql:"transaction_type"`
	// @inject_tag: sql:"chain_id"
	ChainID string `protobuf:"bytes,50,opt,name=ChainID,proto3" json:"ChainID,omitempty" sql:"chain_id"`
	// @inject_tag: sql:"owner"
	Owner string `protobuf:"bytes,51,opt,name=Owner,proto3" json:"Owner,omitempty" sql:"owner"`
	// @inject_tag: sql:"amount_zero_in"
	AmountZeroIn float64 `protobuf:"fixed64,60,opt,name=AmountZeroIn,proto3" json:"AmountZeroIn,omitempty" sql:"amount_zero_in"`
	// @inject_tag: sql:"amount_one_in"
	AmountOneIn float64 `protobuf:"fixed64,70,opt,name=AmountOneIn,proto3" json:"AmountOneIn,omitempty" sql:"amount_one_in"`
	// @inject_tag: sql:"amount_zero_out"
	AmountZeroOut float64 `protobuf:"fixed64,80,opt,name=AmountZeroOut,proto3" json:"AmountZeroOut,omitempty" sql:"amount_zero_out"`
	// @inject_tag: sql:"amount_one_out"
	AmountOneOut float64 `protobuf:"fixed64,90,opt,name=AmountOneOut,proto3" json:"AmountOneOut,omitempty" sql:"amount_one_out"`
	// @inject_tag: sql:"timestamp"
	Timestamp uint32 `protobuf:"varint,100,opt,name=Timestamp,proto3" json:"Timestamp,omitempty" sql:"timestamp"`
	// @inject_tag: sql:"created_at"
	CreatedAt uint32 `protobuf:"varint,190,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty" sql:"created_at"`
	// @inject_tag: sql:"updated_at"
	UpdatedAt uint32 `protobuf:"varint,200,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty" sql:"updated_at"`
}

func (x *Transaction) Reset() {
	*x = Transaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kline_zeus_v1_transaction_transaction_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction) ProtoMessage() {}

func (x *Transaction) ProtoReflect() protoreflect.Message {
	mi := &file_kline_zeus_v1_transaction_transaction_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction.ProtoReflect.Descriptor instead.
func (*Transaction) Descriptor() ([]byte, []int) {
	return file_kline_zeus_v1_transaction_transaction_proto_rawDescGZIP(), []int{1}
}

func (x *Transaction) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Transaction) GetPoolID() uint64 {
	if x != nil {
		return x.PoolID
	}
	return 0
}

func (x *Transaction) GetTransactionID() uint64 {
	if x != nil {
		return x.TransactionID
	}
	return 0
}

func (x *Transaction) GetTransactionType() string {
	if x != nil {
		return x.TransactionType
	}
	return ""
}

func (x *Transaction) GetChainID() string {
	if x != nil {
		return x.ChainID
	}
	return ""
}

func (x *Transaction) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *Transaction) GetAmountZeroIn() float64 {
	if x != nil {
		return x.AmountZeroIn
	}
	return 0
}

func (x *Transaction) GetAmountOneIn() float64 {
	if x != nil {
		return x.AmountOneIn
	}
	return 0
}

func (x *Transaction) GetAmountZeroOut() float64 {
	if x != nil {
		return x.AmountZeroOut
	}
	return 0
}

func (x *Transaction) GetAmountOneOut() float64 {
	if x != nil {
		return x.AmountOneOut
	}
	return 0
}

func (x *Transaction) GetTimestamp() uint32 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Transaction) GetCreatedAt() uint32 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Transaction) GetUpdatedAt() uint32 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type Conds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID              *kline.Uint32Val     `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
	PoolID          *kline.Uint64Val     `protobuf:"bytes,20,opt,name=PoolID,proto3" json:"PoolID,omitempty"`
	TransactionID   *kline.Uint64Val     `protobuf:"bytes,30,opt,name=TransactionID,proto3" json:"TransactionID,omitempty"`
	TransactionType *kline.StringVal     `protobuf:"bytes,40,opt,name=TransactionType,proto3" json:"TransactionType,omitempty"`
	Timestamp       *kline.Uint32Val     `protobuf:"bytes,60,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	IDs             *kline.Int32SliceVal `protobuf:"bytes,190,opt,name=IDs,proto3" json:"IDs,omitempty"`
}

func (x *Conds) Reset() {
	*x = Conds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kline_zeus_v1_transaction_transaction_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Conds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Conds) ProtoMessage() {}

func (x *Conds) ProtoReflect() protoreflect.Message {
	mi := &file_kline_zeus_v1_transaction_transaction_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Conds.ProtoReflect.Descriptor instead.
func (*Conds) Descriptor() ([]byte, []int) {
	return file_kline_zeus_v1_transaction_transaction_proto_rawDescGZIP(), []int{2}
}

func (x *Conds) GetID() *kline.Uint32Val {
	if x != nil {
		return x.ID
	}
	return nil
}

func (x *Conds) GetPoolID() *kline.Uint64Val {
	if x != nil {
		return x.PoolID
	}
	return nil
}

func (x *Conds) GetTransactionID() *kline.Uint64Val {
	if x != nil {
		return x.TransactionID
	}
	return nil
}

func (x *Conds) GetTransactionType() *kline.StringVal {
	if x != nil {
		return x.TransactionType
	}
	return nil
}

func (x *Conds) GetTimestamp() *kline.Uint32Val {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *Conds) GetIDs() *kline.Int32SliceVal {
	if x != nil {
		return x.IDs
	}
	return nil
}

type CreateTransactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *TransactionReq `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateTransactionRequest) Reset() {
	*x = CreateTransactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kline_zeus_v1_transaction_transaction_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTransactionRequest) ProtoMessage() {}

func (x *CreateTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kline_zeus_v1_transaction_transaction_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTransactionRequest.ProtoReflect.Descriptor instead.
func (*CreateTransactionRequest) Descriptor() ([]byte, []int) {
	return file_kline_zeus_v1_transaction_transaction_proto_rawDescGZIP(), []int{3}
}

func (x *CreateTransactionRequest) GetInfo() *TransactionReq {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateTransactionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Transaction `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateTransactionResponse) Reset() {
	*x = CreateTransactionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kline_zeus_v1_transaction_transaction_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTransactionResponse) ProtoMessage() {}

func (x *CreateTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kline_zeus_v1_transaction_transaction_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTransactionResponse.ProtoReflect.Descriptor instead.
func (*CreateTransactionResponse) Descriptor() ([]byte, []int) {
	return file_kline_zeus_v1_transaction_transaction_proto_rawDescGZIP(), []int{4}
}

func (x *CreateTransactionResponse) GetInfo() *Transaction {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetTransactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID uint32 `protobuf:"varint,10,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *GetTransactionRequest) Reset() {
	*x = GetTransactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kline_zeus_v1_transaction_transaction_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionRequest) ProtoMessage() {}

func (x *GetTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kline_zeus_v1_transaction_transaction_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionRequest.ProtoReflect.Descriptor instead.
func (*GetTransactionRequest) Descriptor() ([]byte, []int) {
	return file_kline_zeus_v1_transaction_transaction_proto_rawDescGZIP(), []int{5}
}

func (x *GetTransactionRequest) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

type GetTransactionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Transaction `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetTransactionResponse) Reset() {
	*x = GetTransactionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kline_zeus_v1_transaction_transaction_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionResponse) ProtoMessage() {}

func (x *GetTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kline_zeus_v1_transaction_transaction_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionResponse.ProtoReflect.Descriptor instead.
func (*GetTransactionResponse) Descriptor() ([]byte, []int) {
	return file_kline_zeus_v1_transaction_transaction_proto_rawDescGZIP(), []int{6}
}

func (x *GetTransactionResponse) GetInfo() *Transaction {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetTransactionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds  *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
	Offset int32  `protobuf:"varint,20,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit  int32  `protobuf:"varint,30,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetTransactionsRequest) Reset() {
	*x = GetTransactionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kline_zeus_v1_transaction_transaction_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTransactionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionsRequest) ProtoMessage() {}

func (x *GetTransactionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kline_zeus_v1_transaction_transaction_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionsRequest.ProtoReflect.Descriptor instead.
func (*GetTransactionsRequest) Descriptor() ([]byte, []int) {
	return file_kline_zeus_v1_transaction_transaction_proto_rawDescGZIP(), []int{7}
}

func (x *GetTransactionsRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

func (x *GetTransactionsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetTransactionsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetTransactionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*Transaction `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Total uint32         `protobuf:"varint,20,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *GetTransactionsResponse) Reset() {
	*x = GetTransactionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kline_zeus_v1_transaction_transaction_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTransactionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionsResponse) ProtoMessage() {}

func (x *GetTransactionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kline_zeus_v1_transaction_transaction_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionsResponse.ProtoReflect.Descriptor instead.
func (*GetTransactionsResponse) Descriptor() ([]byte, []int) {
	return file_kline_zeus_v1_transaction_transaction_proto_rawDescGZIP(), []int{8}
}

func (x *GetTransactionsResponse) GetInfos() []*Transaction {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *GetTransactionsResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetTransactionsForLineRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OriginalTxID uint64 `protobuf:"varint,10,opt,name=OriginalTxID,proto3" json:"OriginalTxID,omitempty"`
	PoolID       uint64 `protobuf:"varint,20,opt,name=PoolID,proto3" json:"PoolID,omitempty"`
	Offset       int32  `protobuf:"varint,30,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit        int32  `protobuf:"varint,40,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetTransactionsForLineRequest) Reset() {
	*x = GetTransactionsForLineRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kline_zeus_v1_transaction_transaction_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTransactionsForLineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionsForLineRequest) ProtoMessage() {}

func (x *GetTransactionsForLineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kline_zeus_v1_transaction_transaction_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionsForLineRequest.ProtoReflect.Descriptor instead.
func (*GetTransactionsForLineRequest) Descriptor() ([]byte, []int) {
	return file_kline_zeus_v1_transaction_transaction_proto_rawDescGZIP(), []int{9}
}

func (x *GetTransactionsForLineRequest) GetOriginalTxID() uint64 {
	if x != nil {
		return x.OriginalTxID
	}
	return 0
}

func (x *GetTransactionsForLineRequest) GetPoolID() uint64 {
	if x != nil {
		return x.PoolID
	}
	return 0
}

func (x *GetTransactionsForLineRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetTransactionsForLineRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetTransactionsForLineResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OriginalTxID uint64         `protobuf:"varint,10,opt,name=OriginalTxID,proto3" json:"OriginalTxID,omitempty"`
	PoolID       uint64         `protobuf:"varint,20,opt,name=PoolID,proto3" json:"PoolID,omitempty"`
	Offset       int32          `protobuf:"varint,30,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit        int32          `protobuf:"varint,40,opt,name=Limit,proto3" json:"Limit,omitempty"`
	Transactions []*Transaction `protobuf:"bytes,50,rep,name=Transactions,proto3" json:"Transactions,omitempty"`
	Total        uint32         `protobuf:"varint,60,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *GetTransactionsForLineResponse) Reset() {
	*x = GetTransactionsForLineResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kline_zeus_v1_transaction_transaction_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTransactionsForLineResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionsForLineResponse) ProtoMessage() {}

func (x *GetTransactionsForLineResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kline_zeus_v1_transaction_transaction_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionsForLineResponse.ProtoReflect.Descriptor instead.
func (*GetTransactionsForLineResponse) Descriptor() ([]byte, []int) {
	return file_kline_zeus_v1_transaction_transaction_proto_rawDescGZIP(), []int{10}
}

func (x *GetTransactionsForLineResponse) GetOriginalTxID() uint64 {
	if x != nil {
		return x.OriginalTxID
	}
	return 0
}

func (x *GetTransactionsForLineResponse) GetPoolID() uint64 {
	if x != nil {
		return x.PoolID
	}
	return 0
}

func (x *GetTransactionsForLineResponse) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetTransactionsForLineResponse) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetTransactionsForLineResponse) GetTransactions() []*Transaction {
	if x != nil {
		return x.Transactions
	}
	return nil
}

func (x *GetTransactionsForLineResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type UpdateTransactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *TransactionReq `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateTransactionRequest) Reset() {
	*x = UpdateTransactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kline_zeus_v1_transaction_transaction_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTransactionRequest) ProtoMessage() {}

func (x *UpdateTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kline_zeus_v1_transaction_transaction_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTransactionRequest.ProtoReflect.Descriptor instead.
func (*UpdateTransactionRequest) Descriptor() ([]byte, []int) {
	return file_kline_zeus_v1_transaction_transaction_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateTransactionRequest) GetInfo() *TransactionReq {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateTransactionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Transaction `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateTransactionResponse) Reset() {
	*x = UpdateTransactionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kline_zeus_v1_transaction_transaction_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTransactionResponse) ProtoMessage() {}

func (x *UpdateTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kline_zeus_v1_transaction_transaction_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTransactionResponse.ProtoReflect.Descriptor instead.
func (*UpdateTransactionResponse) Descriptor() ([]byte, []int) {
	return file_kline_zeus_v1_transaction_transaction_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateTransactionResponse) GetInfo() *Transaction {
	if x != nil {
		return x.Info
	}
	return nil
}

type ExistTransactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID uint32 `protobuf:"varint,10,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *ExistTransactionRequest) Reset() {
	*x = ExistTransactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kline_zeus_v1_transaction_transaction_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistTransactionRequest) ProtoMessage() {}

func (x *ExistTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kline_zeus_v1_transaction_transaction_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistTransactionRequest.ProtoReflect.Descriptor instead.
func (*ExistTransactionRequest) Descriptor() ([]byte, []int) {
	return file_kline_zeus_v1_transaction_transaction_proto_rawDescGZIP(), []int{13}
}

func (x *ExistTransactionRequest) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

type ExistTransactionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exist bool `protobuf:"varint,10,opt,name=Exist,proto3" json:"Exist,omitempty"`
}

func (x *ExistTransactionResponse) Reset() {
	*x = ExistTransactionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kline_zeus_v1_transaction_transaction_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistTransactionResponse) ProtoMessage() {}

func (x *ExistTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kline_zeus_v1_transaction_transaction_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistTransactionResponse.ProtoReflect.Descriptor instead.
func (*ExistTransactionResponse) Descriptor() ([]byte, []int) {
	return file_kline_zeus_v1_transaction_transaction_proto_rawDescGZIP(), []int{14}
}

func (x *ExistTransactionResponse) GetExist() bool {
	if x != nil {
		return x.Exist
	}
	return false
}

type ExistTransactionCondsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conds *Conds `protobuf:"bytes,10,opt,name=Conds,proto3" json:"Conds,omitempty"`
}

func (x *ExistTransactionCondsRequest) Reset() {
	*x = ExistTransactionCondsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kline_zeus_v1_transaction_transaction_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistTransactionCondsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistTransactionCondsRequest) ProtoMessage() {}

func (x *ExistTransactionCondsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kline_zeus_v1_transaction_transaction_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistTransactionCondsRequest.ProtoReflect.Descriptor instead.
func (*ExistTransactionCondsRequest) Descriptor() ([]byte, []int) {
	return file_kline_zeus_v1_transaction_transaction_proto_rawDescGZIP(), []int{15}
}

func (x *ExistTransactionCondsRequest) GetConds() *Conds {
	if x != nil {
		return x.Conds
	}
	return nil
}

type ExistTransactionCondsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exist bool `protobuf:"varint,10,opt,name=Exist,proto3" json:"Exist,omitempty"`
}

func (x *ExistTransactionCondsResponse) Reset() {
	*x = ExistTransactionCondsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kline_zeus_v1_transaction_transaction_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistTransactionCondsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistTransactionCondsResponse) ProtoMessage() {}

func (x *ExistTransactionCondsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kline_zeus_v1_transaction_transaction_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistTransactionCondsResponse.ProtoReflect.Descriptor instead.
func (*ExistTransactionCondsResponse) Descriptor() ([]byte, []int) {
	return file_kline_zeus_v1_transaction_transaction_proto_rawDescGZIP(), []int{16}
}

func (x *ExistTransactionCondsResponse) GetExist() bool {
	if x != nil {
		return x.Exist
	}
	return false
}

type DeleteTransactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID uint32 `protobuf:"varint,10,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *DeleteTransactionRequest) Reset() {
	*x = DeleteTransactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kline_zeus_v1_transaction_transaction_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTransactionRequest) ProtoMessage() {}

func (x *DeleteTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kline_zeus_v1_transaction_transaction_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTransactionRequest.ProtoReflect.Descriptor instead.
func (*DeleteTransactionRequest) Descriptor() ([]byte, []int) {
	return file_kline_zeus_v1_transaction_transaction_proto_rawDescGZIP(), []int{17}
}

func (x *DeleteTransactionRequest) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

type DeleteTransactionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Transaction `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *DeleteTransactionResponse) Reset() {
	*x = DeleteTransactionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kline_zeus_v1_transaction_transaction_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTransactionResponse) ProtoMessage() {}

func (x *DeleteTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kline_zeus_v1_transaction_transaction_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTransactionResponse.ProtoReflect.Descriptor instead.
func (*DeleteTransactionResponse) Descriptor() ([]byte, []int) {
	return file_kline_zeus_v1_transaction_transaction_proto_rawDescGZIP(), []int{18}
}

func (x *DeleteTransactionResponse) GetInfo() *Transaction {
	if x != nil {
		return x.Info
	}
	return nil
}

var File_kline_zeus_v1_transaction_transaction_proto protoreflect.FileDescriptor

var file_kline_zeus_v1_transaction_transaction_proto_rawDesc = []byte{
	0x0a, 0x2b, 0x6b, 0x6c, 0x69, 0x6e, 0x65, 0x2f, 0x7a, 0x65, 0x75, 0x73, 0x2f, 0x76, 0x31, 0x2f,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x6b,
	0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x11, 0x6b, 0x6c, 0x69, 0x6e, 0x65, 0x2f, 0x6b, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xbd, 0x04, 0x0a, 0x0e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x13, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x02, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06,
	0x50, 0x6f, 0x6f, 0x6c, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x04, 0x48, 0x01, 0x52, 0x06,
	0x50, 0x6f, 0x6f, 0x6c, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x29, 0x0a, 0x0d, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x04,
	0x48, 0x02, 0x52, 0x0d, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x44, 0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x0f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52,
	0x0f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x44, 0x18, 0x32,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x07, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x44, 0x88,
	0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x33, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x05, 0x52, 0x05, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x27, 0x0a,
	0x0c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5a, 0x65, 0x72, 0x6f, 0x49, 0x6e, 0x18, 0x3c, 0x20,
	0x01, 0x28, 0x01, 0x48, 0x06, 0x52, 0x0c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5a, 0x65, 0x72,
	0x6f, 0x49, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x4f, 0x6e, 0x65, 0x49, 0x6e, 0x18, 0x46, 0x20, 0x01, 0x28, 0x01, 0x48, 0x07, 0x52, 0x0b, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x6e, 0x65, 0x49, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x29, 0x0a,
	0x0d, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5a, 0x65, 0x72, 0x6f, 0x4f, 0x75, 0x74, 0x18, 0x50,
	0x20, 0x01, 0x28, 0x01, 0x48, 0x08, 0x52, 0x0d, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5a, 0x65,
	0x72, 0x6f, 0x4f, 0x75, 0x74, 0x88, 0x01, 0x01, 0x12, 0x27, 0x0a, 0x0c, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x4f, 0x6e, 0x65, 0x4f, 0x75, 0x74, 0x18, 0x5a, 0x20, 0x01, 0x28, 0x01, 0x48, 0x09,
	0x52, 0x0c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x6e, 0x65, 0x4f, 0x75, 0x74, 0x88, 0x01,
	0x01, 0x12, 0x21, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x64,
	0x20, 0x01, 0x28, 0x0d, 0x48, 0x0a, 0x52, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x88, 0x01, 0x01, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x49, 0x44, 0x42, 0x09, 0x0a, 0x07, 0x5f,
	0x50, 0x6f, 0x6f, 0x6c, 0x49, 0x44, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x42, 0x0a, 0x0a, 0x08,
	0x5f, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x44, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x4f, 0x77, 0x6e,
	0x65, 0x72, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5a, 0x65, 0x72,
	0x6f, 0x49, 0x6e, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x6e,
	0x65, 0x49, 0x6e, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5a, 0x65,
	0x72, 0x6f, 0x4f, 0x75, 0x74, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x4f, 0x6e, 0x65, 0x4f, 0x75, 0x74, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x22, 0xa1, 0x03, 0x0a, 0x0b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x02, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x6f, 0x6f, 0x6c, 0x49, 0x44, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x50, 0x6f, 0x6f, 0x6c, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x0d,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x1e, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0d, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x12, 0x28, 0x0a, 0x0f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x43, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x44, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43,
	0x68, 0x61, 0x69, 0x6e, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x18,
	0x33, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5a, 0x65, 0x72, 0x6f, 0x49, 0x6e, 0x18, 0x3c, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5a, 0x65, 0x72, 0x6f, 0x49, 0x6e,
	0x12, 0x20, 0x0a, 0x0b, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x6e, 0x65, 0x49, 0x6e, 0x18,
	0x46, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x6e, 0x65,
	0x49, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5a, 0x65, 0x72, 0x6f,
	0x4f, 0x75, 0x74, 0x18, 0x50, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x5a, 0x65, 0x72, 0x6f, 0x4f, 0x75, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x4f, 0x6e, 0x65, 0x4f, 0x75, 0x74, 0x18, 0x5a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x6e, 0x65, 0x4f, 0x75, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1d, 0x0a, 0x09, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0xbe, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x09, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0xc8, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xa0, 0x02, 0x0a, 0x05, 0x43, 0x6f, 0x6e,
	0x64, 0x73, 0x12, 0x20, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x6b, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x55, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c,
	0x52, 0x02, 0x49, 0x44, 0x12, 0x28, 0x0a, 0x06, 0x50, 0x6f, 0x6f, 0x6c, 0x49, 0x44, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6b, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x55, 0x69, 0x6e,
	0x74, 0x36, 0x34, 0x56, 0x61, 0x6c, 0x52, 0x06, 0x50, 0x6f, 0x6f, 0x6c, 0x49, 0x44, 0x12, 0x36,
	0x0a, 0x0d, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18,
	0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6b, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x55, 0x69,
	0x6e, 0x74, 0x36, 0x34, 0x56, 0x61, 0x6c, 0x52, 0x0d, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x3a, 0x0a, 0x0f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x6b, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61,
	0x6c, 0x52, 0x0f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x2e, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x3c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6b, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x55, 0x69,
	0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x52, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x12, 0x27, 0x0a, 0x03, 0x49, 0x44, 0x73, 0x18, 0xbe, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x6b, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x53, 0x6c,
	0x69, 0x63, 0x65, 0x56, 0x61, 0x6c, 0x52, 0x03, 0x49, 0x44, 0x73, 0x22, 0x54, 0x0a, 0x18, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6b, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x52, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0x52, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35,
	0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6b,
	0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x27, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x44, 0x22, 0x4f,
	0x0a, 0x16, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6b, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22,
	0x79, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x05, 0x43, 0x6f, 0x6e,
	0x64, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6b, 0x6c, 0x69, 0x6e, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x4f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x1e, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x68, 0x0a, 0x17, 0x47, 0x65,
	0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6b, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x22, 0x89, 0x01, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x46, 0x6f, 0x72, 0x4c, 0x69, 0x6e, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e,
	0x61, 0x6c, 0x54, 0x78, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x4f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x54, 0x78, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x6f,
	0x6f, 0x6c, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x50, 0x6f, 0x6f, 0x6c,
	0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x1e, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x28, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x22, 0xe7, 0x01, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x46, 0x6f, 0x72, 0x4c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x54,
	0x78, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x4f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x61, 0x6c, 0x54, 0x78, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x6f, 0x6f, 0x6c, 0x49,
	0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x50, 0x6f, 0x6f, 0x6c, 0x49, 0x44, 0x12,
	0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x28, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x45, 0x0a,
	0x0c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x32, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6b, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x3c, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x54, 0x0a, 0x18, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6b, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0x52, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a,
	0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6b, 0x6c,
	0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x29, 0x0a, 0x17, 0x45, 0x78, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x44, 0x22,
	0x30, 0x0a, 0x18, 0x45, 0x78, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x45,
	0x78, 0x69, 0x73, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x45, 0x78, 0x69, 0x73,
	0x74, 0x22, 0x51, 0x0a, 0x1c, 0x45, 0x78, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x31, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x6b, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x05, 0x43,
	0x6f, 0x6e, 0x64, 0x73, 0x22, 0x35, 0x0a, 0x1d, 0x45, 0x78, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x78, 0x69, 0x73, 0x74, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x45, 0x78, 0x69, 0x73, 0x74, 0x22, 0x2a, 0x0a, 0x18, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x44, 0x22, 0x52, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6b, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x32, 0xfc, 0x07, 0x0a, 0x07,
	0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x12, 0x76, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x2e, 0x6b,
	0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x6b,
	0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x76, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x2e, 0x6b, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x6b, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6d, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x2e, 0x6b, 0x6c, 0x69, 0x6e,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x6b, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65,
	0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x70, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2c, 0x2e, 0x6b, 0x6c, 0x69, 0x6e,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x6b, 0x6c, 0x69, 0x6e, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47,
	0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xad, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x46, 0x6f, 0x72, 0x4c,
	0x69, 0x6e, 0x65, 0x12, 0x33, 0x2e, 0x6b, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x46, 0x6f, 0x72, 0x4c, 0x69, 0x6e,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x6b, 0x6c, 0x69, 0x6e, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x46,
	0x6f, 0x72, 0x4c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x28,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x3a, 0x01, 0x2a, 0x22, 0x1d, 0x2f, 0x76, 0x31, 0x2f, 0x67,
	0x65, 0x74, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f,
	0x66, 0x6f, 0x72, 0x2f, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x73, 0x0a, 0x10, 0x45, 0x78, 0x69, 0x73,
	0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x2e, 0x6b,
	0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x6b, 0x6c,
	0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x82, 0x01,
	0x0a, 0x15, 0x45, 0x78, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x32, 0x2e, 0x6b, 0x6c, 0x69, 0x6e, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x45,
	0x78, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x6b, 0x6c,
	0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x76, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x2e, 0x6b, 0x6c, 0x69, 0x6e, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x6b, 0x6c, 0x69, 0x6e, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x42, 0x5a, 0x40, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x47, 0x65, 0x61, 0x70, 0x65, 0x66, 0x75,
	0x72, 0x69, 0x74, 0x2f, 0x6b, 0x6c, 0x69, 0x6e, 0x65, 0x2d, 0x62, 0x61, 0x63, 0x6b, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6b, 0x6c, 0x69, 0x6e, 0x65, 0x2f, 0x7a, 0x65, 0x75, 0x73, 0x2f,
	0x76, 0x31, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_kline_zeus_v1_transaction_transaction_proto_rawDescOnce sync.Once
	file_kline_zeus_v1_transaction_transaction_proto_rawDescData = file_kline_zeus_v1_transaction_transaction_proto_rawDesc
)

func file_kline_zeus_v1_transaction_transaction_proto_rawDescGZIP() []byte {
	file_kline_zeus_v1_transaction_transaction_proto_rawDescOnce.Do(func() {
		file_kline_zeus_v1_transaction_transaction_proto_rawDescData = protoimpl.X.CompressGZIP(file_kline_zeus_v1_transaction_transaction_proto_rawDescData)
	})
	return file_kline_zeus_v1_transaction_transaction_proto_rawDescData
}

var file_kline_zeus_v1_transaction_transaction_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_kline_zeus_v1_transaction_transaction_proto_goTypes = []interface{}{
	(*TransactionReq)(nil),                 // 0: kline.v1.transaction.TransactionReq
	(*Transaction)(nil),                    // 1: kline.v1.transaction.Transaction
	(*Conds)(nil),                          // 2: kline.v1.transaction.Conds
	(*CreateTransactionRequest)(nil),       // 3: kline.v1.transaction.CreateTransactionRequest
	(*CreateTransactionResponse)(nil),      // 4: kline.v1.transaction.CreateTransactionResponse
	(*GetTransactionRequest)(nil),          // 5: kline.v1.transaction.GetTransactionRequest
	(*GetTransactionResponse)(nil),         // 6: kline.v1.transaction.GetTransactionResponse
	(*GetTransactionsRequest)(nil),         // 7: kline.v1.transaction.GetTransactionsRequest
	(*GetTransactionsResponse)(nil),        // 8: kline.v1.transaction.GetTransactionsResponse
	(*GetTransactionsForLineRequest)(nil),  // 9: kline.v1.transaction.GetTransactionsForLineRequest
	(*GetTransactionsForLineResponse)(nil), // 10: kline.v1.transaction.GetTransactionsForLineResponse
	(*UpdateTransactionRequest)(nil),       // 11: kline.v1.transaction.UpdateTransactionRequest
	(*UpdateTransactionResponse)(nil),      // 12: kline.v1.transaction.UpdateTransactionResponse
	(*ExistTransactionRequest)(nil),        // 13: kline.v1.transaction.ExistTransactionRequest
	(*ExistTransactionResponse)(nil),       // 14: kline.v1.transaction.ExistTransactionResponse
	(*ExistTransactionCondsRequest)(nil),   // 15: kline.v1.transaction.ExistTransactionCondsRequest
	(*ExistTransactionCondsResponse)(nil),  // 16: kline.v1.transaction.ExistTransactionCondsResponse
	(*DeleteTransactionRequest)(nil),       // 17: kline.v1.transaction.DeleteTransactionRequest
	(*DeleteTransactionResponse)(nil),      // 18: kline.v1.transaction.DeleteTransactionResponse
	(*kline.Uint32Val)(nil),                // 19: kline.Uint32Val
	(*kline.Uint64Val)(nil),                // 20: kline.Uint64Val
	(*kline.StringVal)(nil),                // 21: kline.StringVal
	(*kline.Int32SliceVal)(nil),            // 22: kline.Int32SliceVal
}
var file_kline_zeus_v1_transaction_transaction_proto_depIdxs = []int32{
	19, // 0: kline.v1.transaction.Conds.ID:type_name -> kline.Uint32Val
	20, // 1: kline.v1.transaction.Conds.PoolID:type_name -> kline.Uint64Val
	20, // 2: kline.v1.transaction.Conds.TransactionID:type_name -> kline.Uint64Val
	21, // 3: kline.v1.transaction.Conds.TransactionType:type_name -> kline.StringVal
	19, // 4: kline.v1.transaction.Conds.Timestamp:type_name -> kline.Uint32Val
	22, // 5: kline.v1.transaction.Conds.IDs:type_name -> kline.Int32SliceVal
	0,  // 6: kline.v1.transaction.CreateTransactionRequest.Info:type_name -> kline.v1.transaction.TransactionReq
	1,  // 7: kline.v1.transaction.CreateTransactionResponse.Info:type_name -> kline.v1.transaction.Transaction
	1,  // 8: kline.v1.transaction.GetTransactionResponse.Info:type_name -> kline.v1.transaction.Transaction
	2,  // 9: kline.v1.transaction.GetTransactionsRequest.Conds:type_name -> kline.v1.transaction.Conds
	1,  // 10: kline.v1.transaction.GetTransactionsResponse.Infos:type_name -> kline.v1.transaction.Transaction
	1,  // 11: kline.v1.transaction.GetTransactionsForLineResponse.Transactions:type_name -> kline.v1.transaction.Transaction
	0,  // 12: kline.v1.transaction.UpdateTransactionRequest.Info:type_name -> kline.v1.transaction.TransactionReq
	1,  // 13: kline.v1.transaction.UpdateTransactionResponse.Info:type_name -> kline.v1.transaction.Transaction
	2,  // 14: kline.v1.transaction.ExistTransactionCondsRequest.Conds:type_name -> kline.v1.transaction.Conds
	1,  // 15: kline.v1.transaction.DeleteTransactionResponse.Info:type_name -> kline.v1.transaction.Transaction
	3,  // 16: kline.v1.transaction.Manager.CreateTransaction:input_type -> kline.v1.transaction.CreateTransactionRequest
	11, // 17: kline.v1.transaction.Manager.UpdateTransaction:input_type -> kline.v1.transaction.UpdateTransactionRequest
	5,  // 18: kline.v1.transaction.Manager.GetTransaction:input_type -> kline.v1.transaction.GetTransactionRequest
	7,  // 19: kline.v1.transaction.Manager.GetTransactions:input_type -> kline.v1.transaction.GetTransactionsRequest
	9,  // 20: kline.v1.transaction.Manager.GetTransactionsForLine:input_type -> kline.v1.transaction.GetTransactionsForLineRequest
	13, // 21: kline.v1.transaction.Manager.ExistTransaction:input_type -> kline.v1.transaction.ExistTransactionRequest
	15, // 22: kline.v1.transaction.Manager.ExistTransactionConds:input_type -> kline.v1.transaction.ExistTransactionCondsRequest
	17, // 23: kline.v1.transaction.Manager.DeleteTransaction:input_type -> kline.v1.transaction.DeleteTransactionRequest
	4,  // 24: kline.v1.transaction.Manager.CreateTransaction:output_type -> kline.v1.transaction.CreateTransactionResponse
	12, // 25: kline.v1.transaction.Manager.UpdateTransaction:output_type -> kline.v1.transaction.UpdateTransactionResponse
	6,  // 26: kline.v1.transaction.Manager.GetTransaction:output_type -> kline.v1.transaction.GetTransactionResponse
	8,  // 27: kline.v1.transaction.Manager.GetTransactions:output_type -> kline.v1.transaction.GetTransactionsResponse
	10, // 28: kline.v1.transaction.Manager.GetTransactionsForLine:output_type -> kline.v1.transaction.GetTransactionsForLineResponse
	14, // 29: kline.v1.transaction.Manager.ExistTransaction:output_type -> kline.v1.transaction.ExistTransactionResponse
	16, // 30: kline.v1.transaction.Manager.ExistTransactionConds:output_type -> kline.v1.transaction.ExistTransactionCondsResponse
	18, // 31: kline.v1.transaction.Manager.DeleteTransaction:output_type -> kline.v1.transaction.DeleteTransactionResponse
	24, // [24:32] is the sub-list for method output_type
	16, // [16:24] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_kline_zeus_v1_transaction_transaction_proto_init() }
func file_kline_zeus_v1_transaction_transaction_proto_init() {
	if File_kline_zeus_v1_transaction_transaction_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_kline_zeus_v1_transaction_transaction_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kline_zeus_v1_transaction_transaction_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kline_zeus_v1_transaction_transaction_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Conds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kline_zeus_v1_transaction_transaction_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTransactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kline_zeus_v1_transaction_transaction_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTransactionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kline_zeus_v1_transaction_transaction_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTransactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kline_zeus_v1_transaction_transaction_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTransactionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kline_zeus_v1_transaction_transaction_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTransactionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kline_zeus_v1_transaction_transaction_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTransactionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kline_zeus_v1_transaction_transaction_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTransactionsForLineRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kline_zeus_v1_transaction_transaction_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTransactionsForLineResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kline_zeus_v1_transaction_transaction_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTransactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kline_zeus_v1_transaction_transaction_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTransactionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kline_zeus_v1_transaction_transaction_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistTransactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kline_zeus_v1_transaction_transaction_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistTransactionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kline_zeus_v1_transaction_transaction_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistTransactionCondsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kline_zeus_v1_transaction_transaction_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistTransactionCondsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kline_zeus_v1_transaction_transaction_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTransactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kline_zeus_v1_transaction_transaction_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTransactionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_kline_zeus_v1_transaction_transaction_proto_msgTypes[0].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_kline_zeus_v1_transaction_transaction_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_kline_zeus_v1_transaction_transaction_proto_goTypes,
		DependencyIndexes: file_kline_zeus_v1_transaction_transaction_proto_depIdxs,
		MessageInfos:      file_kline_zeus_v1_transaction_transaction_proto_msgTypes,
	}.Build()
	File_kline_zeus_v1_transaction_transaction_proto = out.File
	file_kline_zeus_v1_transaction_transaction_proto_rawDesc = nil
	file_kline_zeus_v1_transaction_transaction_proto_goTypes = nil
	file_kline_zeus_v1_transaction_transaction_proto_depIdxs = nil
}
