syntax = "proto3";

package kline.v1.token;

option go_package = "github.com/Geapefurit/kline-back/proto/kline/zeus/v1/token";
import "google/api/annotations.proto";
import "kline/kline.proto";

service Manager {
  rpc CreateToken(CreateTokenRequest) returns (CreateTokenResponse) {}
  rpc UpdateToken(UpdateTokenRequest) returns (UpdateTokenResponse) {}
  rpc GetToken(GetTokenRequest) returns (GetTokenResponse) {}
  rpc GetTokens(GetTokensRequest) returns (GetTokensResponse) {
    option (google.api.http) = {
        post : "/v1/get/tokens"
        body : "*"
      };
  }
  rpc ExistToken(ExistTokenRequest) returns (ExistTokenResponse) {}
  rpc ExistTokenConds(ExistTokenCondsRequest)
      returns (ExistTokenCondsResponse) {}
  rpc DeleteToken(DeleteTokenRequest) returns (DeleteTokenResponse) {}
}

message TokenReq {
  optional uint32 ID = 10;
  optional string Address = 20;
  optional string Site = 30;
  optional string Icon = 40;
  optional string Name = 50;
  optional string Symbol = 60;
}

message Token {
  // @inject_tag: sql:"id"
  uint32 ID = 10;
  // @inject_tag: sql:"address"
  string Address = 20;
  // @inject_tag: sql:"site"
  string Site = 30;
  // @inject_tag: sql:"icon"
  string Icon = 40;
  // @inject_tag: sql:"name"
  string Name = 50;
  // @inject_tag: sql:"symbol"
  string Symbol = 60;
  // @inject_tag: sql:"created_at"
  uint32 CreatedAt = 190;
  // @inject_tag: sql:"updated_at"
  uint32 UpdatedAt = 200;
}

message Conds {
  kline.Uint32Val ID = 10;
  kline.StringVal Address = 20;
  kline.StringVal Site = 30;
  kline.StringVal Icon = 40;
  kline.StringVal Name = 50;
  kline.StringVal Symbol = 60;
  kline.Int32SliceVal IDs = 190;
}

message CreateTokenRequest { TokenReq Info = 10; }
message CreateTokenResponse { Token Info = 10; }

message GetTokenRequest { uint32 ID = 10; }
message GetTokenResponse { Token Info = 10; }

message GetTokensRequest {
  Conds Conds = 10;
  int32 Offset = 20;
  int32 Limit = 30;
}

message GetTokensResponse {
  repeated Token Infos = 10;
  uint32 Total = 20;
}

message UpdateTokenRequest { TokenReq Info = 10; }
message UpdateTokenResponse { Token Info = 10; }

message ExistTokenRequest { uint32 ID = 10; }
message ExistTokenResponse { bool Exist = 10; }

message ExistTokenCondsRequest { Conds Conds = 10; }
message ExistTokenCondsResponse { bool Exist = 10; }

message DeleteTokenRequest { uint32 ID = 10; }
message DeleteTokenResponse { Token Info = 10; }
